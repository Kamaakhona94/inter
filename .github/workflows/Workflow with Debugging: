name: test-and-deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      # Cache pip dependencies to speed up installation
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        continue-on-error: false

      # Debug dependency installation if it fails
      - name: Debug pip installation
        if: failure()
        run: |
          echo "Dependency installation failed. Checking environment..."
          python -m pip list
          python -m pip --version
          dir
          echo "Requirements file contents:"
          type requirements.txt 2> nul || echo "requirements.txt not found"

      # Run the test script
      - name: Run tests
        run: |
          python gold_bot.py --test
        continue-on-error: false

      # Debug test failure
      - name: Debug test failure
        if: failure()
        run: |
          echo "Test execution failed. Debugging..."
          dir
          type gold_bot.py
          type gold_chart.html 2> nul || echo "gold_chart.html not found"
          echo "Checking Python environment:"
          python --version
          python -m pip list

      # Upload artifacts (test results)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: gold_chart.html
        continue-on-error: true

      # Optional: Additional debug logging
      - name: Additional debug information
        if: always()
        run: |
          echo "Workflow completed with status: ${{ job.status }}"
          dir
          echo "Environment variables:"
          set
